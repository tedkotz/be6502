FEATURES {
    STARTADDRESS: default = $8000;
}
SYMBOLS {
    __STACKSIZE__:  type = weak, value = $0800;
#    __STACKSTART__: type = weak, value = $5FFF;
#    __ZPSTART__:    type = weak, value = $0000;
}
MEMORY {
    ZP:        start =    $0, size =  $100, type   = rw, define = yes;
    RAM:       start =  $200, size = $3E00, type   = rw, define = yes;
    ROM:       start = $8000, size = $8000, type   = ro, file   = "%O.rom.bin", fillval=$ea, fill=yes;
}
SEGMENTS {
    ZEROPAGE: load = ZP,  type = zp,  define   = yes;
    DATA:     load = ROM, type = rw,  define   = yes, run = RAM;
    BSS:      load = RAM, type = bss, define   = yes;
    HEAP:     load = RAM, type = bss, optional = yes;
    STARTUP:  load = ROM, type = ro,  define   = yes;
    ONCE:     load = ROM, type = ro,  optional = yes;
    CODE:     load = ROM, type = ro,  define   = yes;
    RODATA:   load = ROM, type = ro,  define   = yes;
    VECTORS:  load = ROM, type = ro,  define   = yes,  start    = $FFFA;
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = STARTUP;
#            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = STARTUP;
#            segment = RODATA;
#    CONDES: type    = interruptor,
#            label   = __INTERRUPTOR_TABLE__,
#            count   = __INTERRUPTOR_COUNT__,
#            segment = RODATA,
#            import  = __CALLIRQ__;
}
FILES {
    %O: format = bin;
}

